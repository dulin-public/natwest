#!/usr/bin/env ruby
$LOAD_PATH.unshift File.join(File.dirname(__FILE__), '..', 'lib')

require 'natwest'
require 'highline/import'

action = ARGV[0]

if action == "summary"

  Natwest::Customer.new.tap do |nw|
    nw.login
    nw.accounts.each do |acc|
      puts '###'
      puts "#{acc.name} [#{acc.number}; #{acc.sort_code}] " +
         "balance: #{acc.balance}; available: #{acc.available}"
      puts "\nRecent Transactions:"
      acc.transactions.each do |trans|
        amount = trans[:credit] ? "+#{trans[:credit]}" : "-#{trans[:debit]}"
        puts "#{trans[:date]}: #{amount}"
        puts "\t" + trans[:details]
      end
      puts
    end
  end
elsif action == "statement"

  Natwest::Customer.new.tap do |nw|
    nw.login
    transactions = nw.statement

    File.open('saved_file', 'wb'){|f| f << transactions}
    puts "#{transactions}"
  end
elsif action == "upload"
  ZoomInternet::UploadStatement.new.tap do |zoom| 
    zoom.login
    zoom.upload
  end
elsif action == "auto"
  puts "Logging into bank:"
  Natwest::Customer.new.tap do |nw|
    nw.login
    transactions = nw.statement

    File.open('saved_file.csv', 'wb'){|f| f << transactions}
  end
  puts "Statement Downloaded"
else
 puts "This is a rudimentary API for Natwest Online banking.

  Usage:
  nw <command>

  Commands:
    summary
      Displays an account summary and recent transactions
    statement 
      Download last week statement
    upload 
      Upload statement into the system
    "
end
